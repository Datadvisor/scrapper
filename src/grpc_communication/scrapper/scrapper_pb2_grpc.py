# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import grpc_communication.scrapper.scrapper_pb2 as scrapper__pb2


class ScrapperServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetByName = channel.unary_unary(
                '/scrapper.ScrapperService/GetByName',
                request_serializer=scrapper__pb2.GetByNameRequest.SerializeToString,
                response_deserializer=scrapper__pb2.GetByNameResponse.FromString,
                )
        self.GetByEmail = channel.unary_unary(
                '/scrapper.ScrapperService/GetByEmail',
                request_serializer=scrapper__pb2.GetByEmailRequest.SerializeToString,
                response_deserializer=scrapper__pb2.GetByEmailResponse.FromString,
                )
        self.GetByResume = channel.stream_unary(
                '/scrapper.ScrapperService/GetByResume',
                request_serializer=scrapper__pb2.GetByResumeRequest.SerializeToString,
                response_deserializer=scrapper__pb2.GetByResumeResponse.FromString,
                )
        self.GetByFace = channel.stream_unary(
                '/scrapper.ScrapperService/GetByFace',
                request_serializer=scrapper__pb2.GetByFaceRequest.SerializeToString,
                response_deserializer=scrapper__pb2.GetByFaceResponse.FromString,
                )


class ScrapperServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetByName(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetByEmail(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetByResume(self, request_iterator, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetByFace(self, request_iterator, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ScrapperServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetByName': grpc.unary_unary_rpc_method_handler(
                    servicer.GetByName,
                    request_deserializer=scrapper__pb2.GetByNameRequest.FromString,
                    response_serializer=scrapper__pb2.GetByNameResponse.SerializeToString,
            ),
            'GetByEmail': grpc.unary_unary_rpc_method_handler(
                    servicer.GetByEmail,
                    request_deserializer=scrapper__pb2.GetByEmailRequest.FromString,
                    response_serializer=scrapper__pb2.GetByEmailResponse.SerializeToString,
            ),
            'GetByResume': grpc.stream_unary_rpc_method_handler(
                    servicer.GetByResume,
                    request_deserializer=scrapper__pb2.GetByResumeRequest.FromString,
                    response_serializer=scrapper__pb2.GetByResumeResponse.SerializeToString,
            ),
            'GetByFace': grpc.stream_unary_rpc_method_handler(
                    servicer.GetByFace,
                    request_deserializer=scrapper__pb2.GetByFaceRequest.FromString,
                    response_serializer=scrapper__pb2.GetByFaceResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'scrapper.ScrapperService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ScrapperService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetByName(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/scrapper.ScrapperService/GetByName',
            scrapper__pb2.GetByNameRequest.SerializeToString,
            scrapper__pb2.GetByNameResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetByEmail(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/scrapper.ScrapperService/GetByEmail',
            scrapper__pb2.GetByEmailRequest.SerializeToString,
            scrapper__pb2.GetByEmailResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetByResume(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_unary(request_iterator, target, '/scrapper.ScrapperService/GetByResume',
            scrapper__pb2.GetByResumeRequest.SerializeToString,
            scrapper__pb2.GetByResumeResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetByFace(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_unary(request_iterator, target, '/scrapper.ScrapperService/GetByFace',
            scrapper__pb2.GetByFaceRequest.SerializeToString,
            scrapper__pb2.GetByFaceResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
